{"version":3,"file":"static/js/643.0f5b5972.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/LoginForm/LoginForm.jsx","components/RegisterForm/RegisterForm.jsx","components/Spinner/Spinner.jsx","pages/Register/Register.jsx","redux/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"formGroup\":\"ContactForm_formGroup__wsR1+\",\"button\":\"ContactForm_button__eSwX9\"};","import Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const stateContacts = useSelector(selectContacts);\n  const stateContactsNames = stateContacts.map(contact => contact.name);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name: event.target.elements.name.value,\n      number: event.target.elements.number.value,\n    };\n\n    if (stateContactsNames.includes(contact.name)) {\n      event.target.reset();\n      return Notiflix.Notify.warning(`${contact.name} is alredy in contacts`, {\n        width: '500px',\n        position: 'center-top',\n        distance: '18px',\n        svgSize: '120px',\n        timeout: 3000,\n        borderRadius: '3px',\n        fontFamily: 'Dosis',\n        fontSize: '20px',\n      });\n    }\n\n    dispatch(addContact(contact));\n    Notiflix.Notify.success(`${contact.name} added`, {\n      width: '500px',\n      position: 'center-top',\n      distance: '18px',\n      svgSize: '120px',\n      timeout: 3000,\n      borderRadius: '3px',\n      fontFamily: 'Dosis',\n      fontSize: '20px',\n    });\n    event.target.reset();\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.form__name}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[A-Za-z.'\\- ]+$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            className={css.form__input}\n            placeholder=\"Contact name\"\n          />\n        </label>\n\n        <label className={css.form__number}>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"^\\+?\\d{1,4}?\\s?\\(?\\d{1,4}?\\)?\\s?\\d{1,4}\\s?\\d{1,4}\\s?\\d{1,9}$\"\n            title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Contact number\"\n            className={css.form__input}\n          />\n        </label>\n\n        <button type=\"submit\" className={css.form__button}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};","import React, { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, editContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const [editingContactId, setEditingContactId] = useState(null);\n  const [editedName, setEditedName] = useState('');\n  const [editedNumber, setEditedNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleEdit = (id, name, number) => {\n    setEditingContactId(id);\n    setEditedName(name);\n    setEditedNumber(number);\n  };\n\n  const handleSave = id => {\n    const editedContact = {\n      id: id,\n      name: editedName,\n      number: editedNumber,\n    };\n\n    dispatch(editContact(editedContact));\n\n    Notiflix.Notify.info(`${editedName} edited`, {\n      width: '500px',\n      position: 'center-top',\n      distance: '18px',\n      svgSize: '120px',\n      timeout: 3000,\n      borderRadius: '3px',\n      fontFamily: 'Dosis',\n      fontSize: '20px',\n    });\n\n    setEditingContactId(null);\n    setEditedName('');\n    setEditedNumber('');\n  };\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n    Notiflix.Notify.failure(`Contact DELETED`, {\n      width: '500px',\n      position: 'center-top',\n      distance: '18px',\n      svgSize: '120px',\n      timeout: 3000,\n      borderRadius: '3px',\n      fontFamily: 'Dosis',\n      fontSize: '20px',\n    });\n  };\n\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          {editingContactId === contact.id ? (\n            <>\n              <input\n                type=\"text\"\n                value={editedName}\n                onChange={e => setEditedName(e.target.value)}\n              />\n              <input\n                type=\"text\"\n                value={editedNumber}\n                onChange={e => setEditedNumber(e.target.value)}\n              />\n              <button type=\"button\" onClick={() => handleSave(contact.id)}>\n                Save\n              </button>\n            </>\n          ) : (\n            <>\n              <p>{contact.name}</p>\n              <p>{contact.number}</p>\n              <div>\n                <button\n                  type=\"button\"\n                  onClick={() =>\n                    handleEdit(contact.id, contact.name, contact.number)\n                  }\n                >\n                  Edit\n                </button>\n                <button type=\"button\" onClick={() => handleDelete(contact.id)}>\n                  Delete\n                </button>\n              </div>\n            </>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"Filter_searchContainer__VH6C3\",\"searchInput\":\"Filter_searchInput__n8k5T\"};","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filtersSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInputChange = event =>\n    dispatch(filterContact(event.target.value));\n\n  return (\n    <div className={css.filter}>\n      <input\n        className={css.filter__input}\n        onChange={handleInputChange}\n        placeholder=\"Find contact by name\"\n      />\n    </div>\n  );\n};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"example@example.com\"\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n          />\n        </label>\n        <button type=\"submit\">\n          Log in\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Username\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Brown\"\n          />\n        </label>\n        <label>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"example@example.com\"\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n          />\n        </label>\n        <button type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <span>Loading...</span>\n    </div>\n  );\n};\n\nexport const Error = () => {\n  return (\n    <div>\n      <p></p>\n      <span>Loading error!</span>\n    </div>\n  );\n};\n","import { RegisterForm } from 'components';\nimport { Helmet } from 'react-helmet';\n\nconst Register = () => (\n  <div>\n    <Helmet>\n      <title>Register</title>\n    </Helmet>\n    <RegisterForm />\n  </div>\n);\nexport default Register;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectStatusFilter = state => state.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, statusFilter) => {\n    if (statusFilter === '') {\n      return contacts;\n    } else {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(statusFilter.filter)\n      );\n    }\n  }\n);"],"names":["ContactForm","dispatch","useDispatch","stateContactsNames","useSelector","selectContacts","map","contact","name","_jsx","className","css","children","_jsxs","onSubmit","event","preventDefault","target","elements","value","number","includes","reset","Notiflix","concat","width","position","distance","svgSize","timeout","borderRadius","fontFamily","fontSize","addContact","type","pattern","title","required","placeholder","ContactList","contacts","selectVisibleContacts","_useState","useState","_useState2","_slicedToArray","editingContactId","setEditingContactId","_useState3","_useState4","editedName","setEditedName","_useState5","_useState6","editedNumber","setEditedNumber","id","_Fragment","onChange","e","onClick","editedContact","editContact","handleSave","deleteContact","Filter","filterContact","LoginForm","form","currentTarget","logIn","email","password","RegisterForm","register","Loader","Error","Helmet","state","selectIsLoading","isLoading","selectError","error","createSelector","filters","statusFilter","filter","toLowerCase"],"sourceRoot":""}