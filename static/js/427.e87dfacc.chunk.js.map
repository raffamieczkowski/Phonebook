{"version":3,"file":"static/js/427.e87dfacc.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/LoginForm/LoginForm.jsx","components/RegisterForm/RegisterForm.jsx","components/Spinner/Spinner.jsx","pages/Login/Login.jsx","redux/contacts/selectors.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const stateContacts = useSelector(selectContacts);\n  const stateContactsNames = stateContacts.map(contact => contact.name);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name: event.target.elements.name.value,\n      number: event.target.elements.number.value,\n    };\n\n    if (stateContactsNames.includes(contact.name)) {\n      event.target.reset();\n      return Notiflix.Notify.warning(`${contact.name} is already in contacts`, {\n        width: '500px',\n        position: 'center-top',\n        distance: '18px',\n        svgSize: '120px',\n        timeout: 3000,\n        borderRadius: '3px',\n        fontFamily: 'Dosis',\n        fontSize: '20px',\n      });\n    }\n\n    dispatch(addContact(contact));\n    Notiflix.Notify.success(`${contact.name} added`, {\n      width: '500px',\n      position: 'center-top',\n      distance: '18px',\n      svgSize: '120px',\n      timeout: 3000,\n      borderRadius: '3px',\n      fontFamily: 'Dosis',\n      fontSize: '20px',\n    });\n    event.target.reset();\n  };\n\n  return (\n    <Stack\n      component=\"form\"\n      onSubmit={handleSubmit}\n      direction=\"row\"\n      alignItems=\"center\"\n      spacing={2}\n    >\n      <TextField\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[A-Za-z.'\\- ]+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        label=\"Contact name\"\n      />\n      <TextField\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"^\\+?\\d{1,4}?\\s?\\(?\\d{1,4}?\\)?\\s?\\d{1,4}\\s?\\d{1,4}\\s?\\d{1,9}$\"\n        title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        label=\"Contact number\"\n      />\n      <Button type=\"submit\" variant=\"contained\">\n        Add contact\n      </Button>\n    </Stack>\n  );\n};\n","import React, { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, editContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nconst contactListStyles = {\n  list: {\n    listStyle: 'none',\n    padding: '0',\n  },\n  listItem: {\n    marginBottom: '20px',\n  },\n  contactInfo: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '10px',\n  },\n  contactName: {\n    fontWeight: 'bold',\n    fontSize: '20px',\n    marginRight: '10px',\n    color: '#ffcc33',\n  },\n  contactNumber: {\n    fontSize: '16px',\n    marginRight: '10px',\n  },\n  editForm: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '10px',\n  },\n  editInput: {\n    marginRight: '10px',\n  },\n  editButton: {\n    marginLeft: '10px',\n  },\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const [editingContactId, setEditingContactId] = useState(null);\n  const [editedName, setEditedName] = useState('');\n  const [editedNumber, setEditedNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleEdit = (id, name, number) => {\n    setEditingContactId(id);\n    setEditedName(name);\n    setEditedNumber(number);\n  };\n\n  const handleSave = id => {\n    const editedContact = {\n      id: id,\n      name: editedName,\n      number: editedNumber,\n    };\n\n    dispatch(editContact(editedContact));\n\n    Notiflix.Notify.info(`${editedName} edited`, {\n      width: '500px',\n      position: 'center-top',\n      distance: '18px',\n      svgSize: '120px',\n      timeout: 3000,\n      borderRadius: '3px',\n      fontFamily: 'Dosis',\n      fontSize: '20px',\n    });\n\n    setEditingContactId(null);\n    setEditedName('');\n    setEditedNumber('');\n  };\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n    Notiflix.Notify.failure(`Contact DELETED`, {\n      width: '500px',\n      position: 'center-top',\n      distance: '18px',\n      svgSize: '120px',\n      timeout: 3000,\n      borderRadius: '3px',\n      fontFamily: 'Dosis',\n      fontSize: '20px',\n    });\n  };\n\n  return (\n    <ul style={contactListStyles.list}>\n      {contacts.map(contact => (\n        <li key={contact.id} style={contactListStyles.listItem}>\n          {editingContactId === contact.id ? (\n            <form style={contactListStyles.editForm}>\n              <TextField\n                type=\"text\"\n                value={editedName}\n                onChange={e => setEditedName(e.target.value)}\n                style={contactListStyles.editInput}\n              />\n              <TextField\n                type=\"text\"\n                value={editedNumber}\n                onChange={e => setEditedNumber(e.target.value)}\n                style={contactListStyles.editInput}\n              />\n              <Stack direction=\"row\" spacing={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => handleSave(contact.id)}\n                >\n                  Save\n                </Button>\n              </Stack>\n            </form>\n          ) : (\n            <div style={contactListStyles.contactInfo}>\n              <Typography style={contactListStyles.contactName}>\n                {contact.name}\n              </Typography>\n              <Typography style={contactListStyles.contactNumber}>\n                {contact.number}\n              </Typography>\n              <Stack direction=\"row\" spacing={2}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() =>\n                    handleEdit(contact.id, contact.name, contact.number)\n                  }\n                >\n                  Edit\n                </Button>\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={() => handleDelete(contact.id)}\n                  style={contactListStyles.editButton}\n                >\n                  Delete\n                </Button>\n              </Stack>\n            </div>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filtersSlice';\nimport InputBase from '@mui/material/InputBase';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Stack from '@mui/material/Stack';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => dispatch(filterContact(event.target.value));\n\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n      <SearchIcon />\n      <InputBase\n        onChange={handleInputChange}\n        placeholder=\"Find contact by name\"\n        inputProps={{ 'aria-label': 'search' }}\n      />\n    </Stack>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div style={{ paddingTop: '30px', display: 'flex', justifyContent: 'center', backgroundColor: '#000033', color: '#ffcc33' }}>\n      <form onSubmit={handleSubmit}>\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <Stack spacing={2} sx={{ width: '300px' }}>\n            <TextField fullWidth label=\"Email\" type=\"email\" name=\"email\" placeholder=\"example@example.com\" style={{ backgroundColor: '#fff', borderRadius: '0' }} />\n            <TextField fullWidth label=\"Password\" type=\"password\" name=\"password\" placeholder=\"password\" style={{ backgroundColor: '#fff', borderRadius: '0' }} />\n            <div style={{ marginBottom: '10px' }}>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ width: '100%', backgroundColor: '#ffcc33', color: '#000033', borderRadius: '0' }}>\n                Log in\n              </Button>\n            </div>\n          </Stack>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div style={{ paddingTop: '30px', display: 'flex', justifyContent: 'center', backgroundColor: '#000033', color: '#ffcc33' }}>\n      <form onSubmit={handleSubmit}>\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <Stack spacing={2} sx={{ width: '300px' }}>\n            <TextField fullWidth label=\"Username\" type=\"text\" name=\"name\" placeholder=\"John Brown\" style={{ backgroundColor: '#fff', borderRadius: '0' }} />\n            <TextField fullWidth label=\"Email\" type=\"email\" name=\"email\" placeholder=\"example@example.com\" style={{ backgroundColor: '#fff', borderRadius: '0' }} />\n            <TextField fullWidth label=\"Password\" type=\"password\" name=\"password\" placeholder=\"password\" style={{ backgroundColor: '#fff', borderRadius: '0' }} />\n            <div style={{ marginBottom: '10px' }}>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ width: '100%', backgroundColor: '#ffcc33', color: '#000033', borderRadius: '0' }}>\n                Register\n              </Button>\n            </div>\n          </Stack>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <span>Loading...</span>\n    </div>\n  );\n};\n\nexport const Error = () => {\n  return (\n    <div>\n      <p></p>\n      <span>Loading error!</span>\n    </div>\n  );\n};\n","import { LoginForm } from 'components';\nimport { Helmet } from 'react-helmet';\n\nconst Login = () => (\n  <div>\n    <Helmet>\n      <title>Login</title>\n    </Helmet>\n    <LoginForm />\n  </div>\n);\nexport default Login;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectStatusFilter = state => state.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, statusFilter) => {\n    if (statusFilter === '') {\n      return contacts;\n    } else {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(statusFilter.filter)\n      );\n    }\n  }\n);"],"names":["ContactForm","dispatch","useDispatch","stateContactsNames","useSelector","selectContacts","map","contact","name","_jsxs","Stack","component","onSubmit","event","preventDefault","target","elements","value","number","includes","reset","Notiflix","concat","width","position","distance","svgSize","timeout","borderRadius","fontFamily","fontSize","addContact","direction","alignItems","spacing","children","_jsx","TextField","type","pattern","title","required","label","Button","variant","contactListStyles","list","listStyle","padding","listItem","marginBottom","contactInfo","display","contactName","fontWeight","marginRight","color","contactNumber","editForm","editInput","editButton","marginLeft","ContactList","contacts","selectVisibleContacts","_useState","useState","_useState2","_slicedToArray","editingContactId","setEditingContactId","_useState3","_useState4","editedName","setEditedName","_useState5","_useState6","editedNumber","setEditedNumber","style","id","onChange","e","onClick","editedContact","editContact","handleSave","Typography","deleteContact","Filter","SearchIcon","InputBase","filterContact","placeholder","inputProps","LoginForm","paddingTop","justifyContent","backgroundColor","form","currentTarget","logIn","email","password","flexDirection","sx","fullWidth","RegisterForm","register","Loader","Error","Helmet","state","selectIsLoading","isLoading","selectError","error","createSelector","filters","statusFilter","filter","toLowerCase"],"sourceRoot":""}